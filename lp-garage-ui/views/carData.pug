-var vehicleData
//-
    -var unitRE = /^([\d\.]*)\s(.*)$/
    mixin unitOption(unitValue, unitName, selectedVal)
        option(value=unitValue selected=(unitValue==selectedVal?true:false))= unitName


label(for="cardata_make").form-label Marca
input(id="cardata_make" type="text" value= (vehicleData && vehicleData.make ? vehicleData.make : "") required data-bound="make").form-control
label(for="cardata_model").form-label Modelo
input(id="cardata_model" type="text" value=(vehicleData && vehicleData.model ? vehicleData.model : "") required data-bound="model").form-control
label(for="cardata_year").form-label Año 
input(id="cardata_year" type="text" value=(vehicleData && vehicleData.year?vehicleData.year:"") data-bound="year").form-control
label(for="cardata_displacement").form-label Cilindrada
.input-group.mb-3
    if getProperty(vehicleData, "Engine.displacement") 
        - var displacementValue = unitRE.test(vehicleData.Engine.displacement) ? unitRE.exec(vehicleData.Engine.displacement)[1] : ""
        - var displacementUnit = unitRE.test(vehicleData.Engine.displacement) ? unitRE.exec(vehicleData.Engine.displacement)[2] : ""
    else 
        - var displacementValue = ""
        - var displacementUnit = "cm^3"
    input(
        id="cardata_displacement" 
        type="number"
        step="any"
        required 
        value=displacementValue
        data-bound="Engine.displacement"
        ).form-control.align-right
    select.form-select.input-group-text.unit(id="cardata_displacement_units" aria-label="unidades cilindrada" data-from="cardata_displacement")
        +unitOption("cm^3", "cm³", displacementUnit)
        +unitOption("m^3", "m³", displacementUnit)
        +unitOption("in^3", "in³", displacementUnit)
        +unitOption("l", "lt", displacementUnit)
label(for="cardata_cylinders").form-label Número de cilindros
.input-group.mb-3
    span.input-group-text.badge.bg-primary
        - var cylinders = (vehicleData && vehicleData.Engine && vehicleData.Engine.cylinders ? vehicleData.Engine.cylinders : 4)
        output(for="cardata_cylinders" id="cardata_cylinders_output")= cylinders 
    input(
        id="cardata_cylinders" 
        type="range" 
        min=1 
        max=16 
        value=cylinders 
        oninput="document.getElementById('cardata_cylinders_output').value = value"
        data-bound="Engine.cylinders"
    ).form-control.form-range
label(for="cardata_weight").form-label Peso del vehículo
.input-group.mb-3
    if vehicleData && vehicleData.weight 
        - var weightValue = unitRE.test(vehicleData.weight) ? unitRE.exec(vehicleData.weight)[1] : ""
        - var weightUnit = unitRE.test(vehicleData.weight) ? unitRE.exec(vehicleData.weight)[2] : "kg"
    else 
        -var weightValue = ""
        -var weightUnit = "kg"
    input(
        id="cardata_weight" 
        type="number"
        step="any"
        value=weightValue
        required
        data-bound="weight"
        ).form-control.align-right
    select.form-select.input-group-text.unit(id="cardata_weight_units" aria-label="unidades peso vehículo" data-from="cardata_weight") 
        +unitOption("kg", "Kg", weightUnit)
        +unitOption("t", "Ton", weightUnit)
        +unitOption("lb", "lb", weightUnit)
label(for="cardata_compressionratio").form-label Relación de compresión
.input-group.mb-3
    if vehicleData && vehicleData.Engine && vehicleData.Engine.compressionRatio 
        -var crValue = vehicleData.Engine.compressionRatio
    else 
        -var crValue = ""
    input(
        id="cardata_compressionratio" 
        type="number" 
        step="any"
        required 
        value=crValue 
        data-bound="Engine.compressionRatio"
    ).form-control.align-right
    .input-group-text :1
label(for="cardata_maxpower").form-label Potencia máxima (estándar)
.input-group.mb-3
    if vehicleData && vehicleData.Engine && vehicleData.Engine.maxPower 
        -var maxPowerValue = unitRE.test(vehicleData.Engine.maxPower) ? unitRE.exec(vehicleData.Engine.maxPower)[1] : ""
        -var maxPowerUnit = unitRE.test(vehicleData.Engine.maxPower) ? unitRE.exec(vehicleData.Engine.maxPower)[2] : "hp"
    else 
        -var maxPowerValue = ""
        -var maxPowerUnit = "hp"
    input(
        id="cardata_maxpower" 
        type="number" 
        step="any"
        value=maxPowerValue 
        required 
        data-bound="Engine.maxPower"
    ).form-control.align-right
    select.form-select.input-group-text.unit(id="cardata_maxpower_units" aria-label="unidades potencia máxima" data-from="cardata_maxpower") 
        +unitOption("hp", "HP", maxPowerUnit)
        +unitOption("kW", "KW", maxPowerUnit)
label(for="cardata_rpmmaxpower").form-label RPM a potencia máxima
    -var rpmMaxPowerValue = (vehicleData && vehicleData.Engine && vehicleData.Engine.rpmMaxPower ? vehicleData.Engine.rpmMaxPower : "")
input(id="cardata_rpmmaxpower" type="number" value=rpmMaxPowerValue required data-bound="Engine.rpmMaxPower").form-control.align-right
label.form-label Tipo de admisión 
.form-check
    if vehicleData && vehicleData.Engine && vehicleData.Engine.intakeType
        -var intakeTypeValue = vehicleData.Engine.intakeType 
    else 
        -var intakeTypeValue = "N"
    input(
        type="radio"
        name="cardata_intakeType"
        id="cardata_intakeType_N"
        value="N"
        checked=(intakeTypeValue=="N"?true:false)
        data-bound="Engine.intakeType"
    ).form-check-input
    label(
        for="cardata_intakeType_N"
    ).form-check-label Atmosférico 
.form-check
    input(
        type="radio"
        name="cardata_intakeType"
        id="cardata_intakeType_T"
        value="T"
        checked=(intakeTypeValue=="T"?true:false)
        data-bound="Engine.intakeType"
    ).form-check-input
    label(
        for="cardata_intakeType_T"
    ).form-check-label Turbo aspirado
.form-check 
    input(
        type="radio"
        name="cardata_intakeType"
        id="cardata_intakeType_S"
        value="S"
        checked=(intakeTypeValue=="S"?true:false)
        data-bound="Engine.intakeType"
    ).form-check-input
    label(
        for="cardata_intakeType_S"
    ).form-check-label Super cargado
label(for="cardata_tireWidth").form-label Ancho de neumático 
.input-group.mb-3 
    if getProperty(vehicleData, "tireWidth")
        -var tw = getProperty(vehicleData, "tireWidth")
        -var tireWidth = unitRE.exec(tw || "0 mm")[1]
        -var tireWidthUnits = unitRE.exec(tw || "0 mm")[2]
    else
        -var tireWidth=0
        -var tireUnits="mm"
    input(
        id="cardata_tireWidth"
        type="number"
        step=1
        value= tireWidth 
        required 
        data-bound="tireWidth"
    ).form-control.align-right
    select.form-select.input-group-text.unit(
        id="cardata_tireWidth_units"
        aria-label="unidades ancho de neumático"
        data-from="cardata_tireWidth"
    )
        +unitOption("mm", "mm", longitudeUnits)
        +unitOption("in", "pulg", longitudeUnits)
label(for="cardata_tireAspectRatio").form-label Perfil neumático 
-var tireAspectRatio = getProperty(vehicleData, "tireAspectRatio")||"0"
input(
    id="cardata_tireAspectRatio"
    type="number"
    step=1
    value=tireAspectRatio 
    required 
    data-bound="tireAspectRatio"
).form-control.align-right
label(for="cardata_wheelRim").form-label Rim neumático
.input-group.mb-3 
    if getProperty(vehicleData, "wheelRim")
        -var wr = getProperty(vehicleData, "wheelRim")
        -var wheelRim = unitRE.exec(wr || "0 pulg")[1]
        -var wheelRimUnits = unitRE.exec(wr || "0 pulg")[2]
    else
        -var wheelRim=0
        -var tireUnits="pulg"
    input(
        id="cardata_wheelRim"
        type="number"
        step=1
        value=wheelRim 
        required 
        data-bound="wheelRim"
    ).form-control.align-right
    select.form-select.input-group-text.unit(
        id="cardata_wheelRim_units"
        aria-label="unidades ancho de neumático"
        data-from="cardata_wheelRim"
    )
        +unitOption("in", "pulg", longitudeUnits)
        +unitOption("mm", "mm", longitudeUnits)