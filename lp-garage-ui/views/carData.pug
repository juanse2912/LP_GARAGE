-var vehicleData
-var unitRE = /^([\d\.]*)\s(.*)$/
mixin unitOption(unitValue, unitName, selectedVal)
    option(value=unitValue selected=(unitValue==selectedVal?true:false))= unitName

form(id="cardata_form" novalidate action="#" method="post").needs-validation
    label(for="cardata_make").form-label Marca
    input(id="cardata_make" type="text" value= (vehicleData && vehicleData.make ? vehicleData.make : "") required).form-control
    label(for="cardata_model").form-label Modelo
    input(id="cardata_model" type="text" value=(vehicleData && vehicleData.model ? vehicleData.model : "") required).form-control
    label(for="cardata_displacement").form-label Cilindrada
    .input-group.mb-3
        if vehicleData && vehicleData.Engine && vehicleData.Engine.displacement 
            - var displacementValue = unitRE.test(vehicleData.Engine.displacement) ? unitRE.exec(vehicleData.Engine.displacement)[1] : ""
            - var displacementUnit = unitRE.test(vehicleData.Engine.displacement) ? unitRE.exec(vehicleData.Engine.displacement)[2] : ""
        else 
            - var displacementValue = ""
            - var displacementUnit = "cm^3"
        input(
            id="cardata_displacement" 
            type="number" 
            required 
            value=displacementValue
            ).form-control.align-right
        select.form-select.input-group-text(id="cardata_displacement_units" aria-label="unidades cilindrada")
            +unitOption("cm^3", "cm³", displacementUnit)
            +unitOption("m^3", "m³", displacementUnit)
            +unitOption("ft^3", "ft³", displacementUnit)
            +unitOption("l", "lt", displacementUnit)
    label(for="cardata_cylinders").form-label Número de cilindros
    .input-group.mb-3
        span.input-group-text.badge.bg-primary
            - var cylinders = (vehicleData && vehicleData.Engine && vehicleData.Engine.cylinders ? vehicleData.Engine.cylinders : 4)
            output(for="cardata_cylinders" id="cardata_cylinders_output")= cylinders 
        input(id="cardata_cylinders" type="range" min=1 max=16 value=cylinders oninput="document.getElementById('cardata_cylinders_output').value = value").form-control.form-range
    label(for="cardata_weight").form-label Peso del vehículo
    .input-group.mb-3
        if vehicleData && vehicleData.weight 
            - var weightValue = unitRE.test(vehicleData.weight) ? unitRE.exec(vehicleData.weight)[1] : ""
            - var weightUnit = unitRE.test(vehicleData.weight) ? unitRE.exec(vehicleData.weight)[2] : "kg"
        else 
            -var weightValue = ""
            -var weightUnit = "kg"
        input(
            id="cardata_weight" 
            type="number" 
            value=weightValue
            required
            ).form-control.align-right
        select.form-select.input-group-text(id="cardata_weight_units" aria-label="unidades peso vehículo") 
            +unitOption("kg", "Kg", weightUnit)
            +unitOption("t", "Ton", weightUni)
            +unitOption("lb", "lb", weightUnit)
    label(for="cardata_compressionratio").form-label Relación de compresión
    .input-group.mb-3
        if vehicleData && vehicleData.Engine && vehicleData.Engine.compressionRatio 
            -var crValue = vehicleData.Engine.compressionRatio
        else 
            -var crValue = ""
        input(id="cardata_compressionratio" type="number" required value=crValue).form-control.align-right
        .input-group-text :1
    label(for="cardata_maxpower").form-label Potencia máxima (estándar)
    .input-group.mb-3
        if vehicleData && vehicleData.Engine && vehicleData.Engine.maxPower 
            -var maxPowerValue = unitRE.test(vehicleData.Engine.maxPower) ? unitRE.exec(vehicleData.Engine.maxPower)[1] : ""
            -var maxPowerUnit = unitRE.test(vehicleData.Engine.maxPower) ? unitRE.exec(vehicleData.Engine.maxPower)[2] : "hp"
        else 
            -var maxPowerValue = ""
            -var maxPowerUnit = "hp"
        input(id="cardata_maxpower" type="number" value=maxPowerValue required).form-control.align-right
        select.form-select.input-group-text(id="cardata_maxpower_help" aria-label="unidades potencia máxima") 
            +unitOption("hp", "HP", maxPowerUnit)
            +unitOption("kw", "KW", maxPowerUnit)
    label(for="cardata_rpmmaxpower").form-label RPM a potencia máxima
        -var rpmMaxPowerValue = (vehicleData && vehicleData.Engine && vehicleData.Engine.rpmMaxPower ? vehicleData.Engine.rpmMaxPower : "")
    input(id="cardata_rpmmaxpower" type="number" value=rpmMaxPowerValue required).form-control.align-right
    label.form-label Tipo de admisión 
    .form-check
        if vehicleData && vehicleData.Engine && vehicleData.Engine.intakeType
            -var intakeTypeValue = vehicleData.Engine.intakeType 
        else 
            -var intakeTypeValue = "N"
        input(
            type="radio"
            name="cardata_intakeType"
            id="cardata_intakeType_N"
            value="N"
            checked=(intakeTypeValue=="N"?true:false)
        ).form-check-input
        label(
            for="cardata_intakeType_N"
        ).form-check-label Atmosférico 
    .form-check
        input(
            type="radio"
            name="cardata_intakeType"
            id="cardata_intakeType_T"
            value="T"
            checked=(intakeTypeValue=="T"?true:false)
        ).form-check-input
        label(
            for="cardata_intakeType_T"
        ).form-check-label Turbo aspirado
    .form-check 
        input(
            type="radio"
            name="cardata_intakeType"
            id="cardata_intakeType_S"
            value="S"
            checked=(intakeTypeValue=="S"?true:false)
        ).form-check-input
        label(
            for="cardata_intakeType_S"
        ).form-check-label Super cargado 
        