.col-10.col-md-4
    form#enginePower.needs-validation(novalidate action="#" method="post")
        label.form-label(for="enginepower_intakepressure") Presión de admisión 
        .input-group.mb-3
            if getProperty(vehicleData, "Engine.EnginePower.intakeAirPressure")
                -var intakePressure = unitRE.exec(getProperty(vehicleData, "Engine.EnginePower.intakeAirPressure"))[1] || "";
                -var intakePressureUnits = unitRE.exec(getProperty(vehicleData, "Engine.EnginePower.intakeAirPressure"))[2] || "kPa";
            else 
                -var intakePressure=""
                -var intakePressureUnits="kPa"
            input.form-control.align-right(
                id="enginepower_intakepressure"
                type="number"
                step="any"
                value= intakePressure
                data-bound="Engine.EnginePower.intakeAirPressure"
                required
            )
            select.form-select.input-group-text.unit(
                id="enginepower_intakepressure_units"
                aria-label="unidades presion de admisión"
                data-from="enginepower_intakepressure"
            )
                +unitOption("kPa", "KPA", intakePressureUnits)
                +unitOption("psi", "PSI", intakePressureUnits)
                +unitOption("bar", "bar", intakePressureUnits)
        label.form-label(for="enginepower_intaketemperature") Temperatura de admisión 
        .input-group.mb-3 
            if getProperty(vehicleData, "Engine.EnginePower.intakeAirTemperature") 
                -var intakeTemperature = unitRE.exec(getProperty(vehicleData, "Engine.EnginePower.intakeAirTemperature"))[1] || "";
                -var intakeTemperatureUnits = unitRE.exec(getProperty(vehicleData, "Engine.EnginePower.intakeAirTemperature"))[2] || ""
            else 
                -var intakeTemperature = "";
                -var intakeTemperatureUnits = "K";
            input.form-control.align-right(
                id="enginepower_intaketemperature"
                type="number"
                step="any"
                value= intakeTemperature 
                data-bound="Engine.EnginePower.intakeAirTemperature"
                required
            )
            select.form-select.input-group-text.unit(
                id="enginepower_intaketemperature_units"
                aria-label="unidades temperatura de admisión"
                data-from="enginepower_intaketemperature"
            )
                +unitOption("K", "°K", intakeTemperatureUnits)
                +unitOption("degC", "°C", intakeTemperatureUnits)
                +unitOption("degF", "°F", intakeTemperatureUnits)
        if !getProperty(vehicleData, "Engine.EnginePower")
            .d-grid
                button.btn.btn-primary(
                    type="submit"
                    id="btn-save"
                    value="submit"
                ) Guardar                
.col-10.col-md-6
    if getProperty(vehicleData, "Engine.EnginePower")
        h3 Cálculos de Potencia
        ul.list-group
            +calculatedValue("Cilindrada:", "Engine.displacement", volumeUnits)
            +calculatedValue("Cilindrada unitaria:", "Engine.unitaryDisplacement", volumeUnits)
            +calculatedValue("Volumen de cámara de combustión:", "Engine.combustionChamberVolume", volumeUnits)
            +calculatedValue("Densidad del aire:", "Engine.EnginePower.airDensity", {
                "kg / m^3":"kg/m³",
                "g / cm^3":"g/cm³",
                "lb / in^3":"lb/in³"
            })
            +calculatedValue("Presión de compresión:", "Engine.EnginePower.compressionPressure", pressureUnits)
            +calculatedValue("Temperatura de compresión:", "Engine.EnginePower.compressionTemperature", temperatureUnits)
            +calculatedValue("Masa de aire:", "Engine.EnginePower.airMass", {
                "kg / s":"kg/s",
                "g / s":"g/s",
                "lb / s":"lb/s"
            })
            +calculatedValue("Masa de combustible:", "Engine.EnginePower.fuelMass", {
                "kg / s":"kg/s",
                "g / s":"g/s",
                "lb / s":"lb/s"
            })
            +calculatedValue("Calor aportado:", "Engine.EnginePower.contributedHeat", powerUnits)
            +calculatedValue("Presión de combustión:", "Engine.EnginePower.combustionPressure", pressureUnits)
            +calculatedValue("Temperatura de combustión:", "Engine.EnginePower.combustionTemperature",temperatureUnits)
            +calculatedValue("Diferencial de presión:", "Engine.EnginePower.pressureDifferential")
            +calculatedValue("Presión media indicada:", "Engine.EnginePower.indicatedmediumpressure", pressureUnits)
            +calculatedValue("Potencia indicada:", "Engine.EnginePower.indicatedpower", powerUnits)
            +calculatedValue("Presión de expansión:", "Engine.EnginePower.expansionpressure", pressureUnits)
            +calculatedValue("Diferencial de presión 2:", "Engine.EnginePower.pressureDifferential2")
            +calculatedValue("Presión media efectiva:", "Engine.EnginePower.effectivemediumpressure", pressureUnits)
            +calculatedValue("Potencia efectiva:", "Engine.EnginePower.efectivePower", powerUnits)
//- Script
if getProperty(vehicleData, "Engine.EnginePower")
    script(src="/javascripts/formControls.js")
    script.
        //Scripts
        var vehicleData= !{JSON.stringify(vehicleData)};
        const partName="#{partName}";
        const subpartName="#{subpartName}";        
        document.addEventListener("DOMContentLoaded", ()=> {
            setUnitSelectEventListener();
            setInputEventListener();
            setUnitButtonListener();
        })
else 
    script.
        // Scripts
        var vehicleData= !{JSON.stringify(vehicleData)};
        function savePart() {
            let payload={};
            payload['intakeAirPressure'] = document.querySelector("#enginepower_intakepressure").value + " "+
                document.querySelector("#enginepower_intakepressure_units").value
            payload['intakeAirTemperature'] = document.querySelector("#enginepower_intaketemperature").value + " "+
                document.querySelector("#enginepower_intaketemperature_units").value
            fetch(
                `/vehicle/${vehicleData.id}/Engine/EnginePower`,
                {
                    "method":"post",
                    "body":JSON.stringify(payload),
                    "headers":{
                        "Content-Type":"application/json"
                    }
                }
            )
                .then(res=>res.json())
                .then(jsonData => {
                    if(!jsonData.Error) {
                        window.location.reload()
                    } else {
                        showAlert("Error creando sección de potencia de motor", "ERROR")
                        console.error("Error creating EnginePower", jsonData)
                    }
                })
                .catch(e=>{
                    console.error("Error creating EnginePower", e)
                    showAlert("Error creando sección de potencia del motor", "ERROR")
                })
        }
        document.querySelector("form#enginePower").addEventListener(
            "submit",
            e => {
                e.preventDefault();
                e.stopPropagation();
                let form=document.getElementById("enginePower")
                if (form.checkValidity()) {
                    savePart();
                } else {
                    form.classList.add('was-validated');
                }
            }
        )